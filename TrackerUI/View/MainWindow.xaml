<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Tracker="clr-namespace:Tracker.ViewModel"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
        x:Class="TracerDemo.MainWindow"
        Title="MainWindow" Height="600"
     HorizontalAlignment="Stretch"
    d:DesignWidth="1600"
    >



    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Name="ButtonVisStyle">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Visibility" Value="Visible" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Closed, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Tracker:PartiesViewModel x:Name="partyCollection" x:Key="partyCollection" />


    </Window.Resources>

    <Grid Margin="10">

        <DataGrid x:Name="partyInfo" VerticalAlignment="Top" 
			AutoGenerateColumns="False" 
			DataContext="{StaticResource partyCollection}"
			ItemsSource="{Binding Parties}"
            HorizontalAlignment="Stretch">


            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Margin" Value="10" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="IsEnabled" Value="True"/>

                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status, UpdateSourceTrigger=PropertyChanged}" Value="Overdue">
                            <Setter Property="Background" Value="Red" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status, UpdateSourceTrigger=PropertyChanged}" Value="Warn">
                            <Setter Property="Background" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status, UpdateSourceTrigger=PropertyChanged}" Value="Closed">
                            <Setter Property="Background" Value="Gray" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Closed, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="2" />
                </Style>

            </DataGrid.CellStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Vehicle Number" Binding="{Binding Veh_Num, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="250"  />

                <DataGridTemplateColumn Header="Departure Time" Width="300">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <xctk:DateTimePicker Value="{Binding ActualDeparture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Estimated Return" Width="300">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <xctk:DateTimePicker Value="{Binding EstimatedArrival, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTemplateColumn Header="Checkin" Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{DynamicResource ButtonVisStyle}" Content="Check in"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Actual Return Time" Binding="{Binding ActualArrival}" Width="250" IsReadOnly="True" />

            </DataGrid.Columns>

            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10">
                            <Label Width="125" Content="Party ID"/>
                            <TextBox IsEnabled="False" Text="{Binding PartyId}" Width="400" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10">
                            <Label Width="125" Content="Party Route Details"/>
                            <TextBox Text="{Binding PartyRoute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="400" HorizontalAlignment="Left" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10">
                            <Label Width="125" Content="Remarks"/>
                            <TextBox TextWrapping="Wrap" Text="{Binding Remarks, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="400" HorizontalAlignment="Left" Height="125"/>
                        </StackPanel>
                        <Button Command="{Binding AddPartyCommand}" CommandParameter="save">Save</Button>
                    </StackPanel>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

        </DataGrid>
    </Grid>
</Window>
